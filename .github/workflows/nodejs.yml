name: Node.js CI

on: 
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      issues: write


    steps: 
      - uses: actions/checkout@v4
      
      - run: |
          ls
          git log

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.0'

      - name: Install Node Dependencies
        run: |
          npm install
          npm install --only=dev
      
      - name: Lint Code
        id: lint
        run: npm run lint
      
      - name: Run Node test
        id: test
        continue-on-error: true
        run: npm test
      
      - name: Check Test Failure
        if: ${{ steps.test.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const body = `Test failed in workflow: ${{ github.workflow }}`;
            const label = 'testing-failure';
            const assignees = [github.actor] || [];
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: label
            });
            const existingIssue = issues.find(issue => issue.title === 'Test Failure');

            if(!existingIssue){
                await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Test Failure',
                labels: ['testing-failure'],
                body: body,
                assignees: assignees
              })
            }

      - name: Close Test Issue
        if: ${{ steps.test.outcome == 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            const label = 'testing-failure';
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'testing-failure',
            });


            if (issues.length > 0) {
              for (const issue of issues) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              }
            }

      - name: Build (if present)
        id: build
        continue-on-error: true
        run: npm run build

      - name: Check Build Failure
        if: ${{ steps.test.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const body = `Build failed in workflow: ${{ github.workflow }} for commit: ${{ github.sha }}`
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Build Failure',
              labels: ['build-failure'],
              body: body
            })

      - name: Close Build Issue
        if: ${{ steps.test.outcome == 'success' }}
        uses: actions/github-script@v7
        with:
          script: |
            const label = 'build-failure';
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'build-failure',
            });


            if (issues.length > 0) {
              for (const issue of issues) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              }
            }
      
      - name: Archive artifacts
        id: artifact
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: build-artifact
          path: dist

      - name: update Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            console.log(context.issue.number)
            console.log(context.issue)
            console.log(${{ steps.lint}})
            console.log(${{ steps.test}})
            console.log(${{ steps.build}})
            console.log(${{ steps.artifact}})
            const body = `**Welcome**, new contributor!

            *Pusher: @${{github.actor}}, workflow: ${{github.workflow}}
            #### Lint \`${{steps.lint.outcome}}\`
            #### test \`${{steps.test.outcome}}\`
            #### build \`${{steps.build.outcome}}\`
            #### artifact \`${{steps.artifact.outcome}}\`


            Please make sure you've read our [contributing guide](CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly âœ¨`
            await github.rest.issues.createComment({
              issue_number: context.issue.number, //PR ID 
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

      




