name: Handle Issues

on:
    workflow_call:
        inputs:
            outcome:
                type: string
                description: "Result from the Task"
                required: true
            label:
                type: string
                description: "Issue Label"
                required: true
            title:
                type: string
                description: "Issue Title"
                required: true

jobs:
    handle-issue:
        runs-on: ubuntu-latest
        steps:
              - name: if task Fail create an issue or comment on the issue
                if: ${{ inputs.outcome == 'failure' }}
                uses: actions/github-script@v7
                with:
                    script: |
                        let body = `${{inputs.title}} in workflow: ${{ github.workflow }}, Please investigate the failure and resolve it.`;
                        const assignees = [context.actor];
                        const { data: issues } = await github.rest.issues.listForRepo({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        labels: ${{inputs.label}}
                        });
                        const existingIssue = issues.find(issue => issue.title ===  ${{inputs.title}});

                        if(!existingIssue){
                            await github.rest.issues.create({
                                owner: context.repo.owner,
                                repo: context.repo.repo,
                                title: ${{inputs.title}},
                                labels: [${{inputs.label}}],
                                body: body,
                                assignees: assignees
                            })
                        } else {
                            boby = `${{inputs.title}} in workflow: ${{ github.workflow }}, ðŸ¤ª ðŸ‘‹ Thanks for reporting! Oga ade`;
                            await github.rest.issues.createComment({
                                issue_number: issue.number,
                                owner: context.repo.owner,
                                repo: context.repo.repo,
                                body: body
                                })
                        }
              - name: close issue when outcome is successfully
                if: ${{ inputs.outcome == 'success' }}
                uses: actions/github-script@v7
                with:
                    script: |
                        const { data: issues } = await github.rest.issues.listForRepo({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            state: 'open',
                            labels: ${{inputs.label}},
                        });
                        for (const issue of issues) {
                            await github.rest.issues.update({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: issue.number,
                            state: 'closed'
                            });
                        }
